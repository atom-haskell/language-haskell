# coffeelint: disable
classes = ["Applicative","Bounded","Enum","Eq","Floating","Foldable","Fractional","Functor","Integral","Monad","Monoid","Num","Ord","Read","Real","RealFloat","RealFrac","Show","Traversable"]
funct = ["abs","acos","acosh","all","and","any","appendFile","asTypeOf","asin","asinh","atan","atan2","atanh","break","ceiling","compare","concat","concatMap","const","cos","cosh","curry","cycle","decodeFloat","div","divMod","drop","dropWhile","either","elem","encodeFloat","enumFrom","enumFromThen","enumFromThenTo","enumFromTo","error","errorWithoutStackTrace","even","exp","exponent","fail","filter","flip","floatDigits","floatRadix","floatRange","floor","fmap","foldMap","foldl","foldl1","foldr","foldr1","fromEnum","fromInteger","fromIntegral","fromRational","fst","gcd","getChar","getContents","getLine","head","id","init","interact","ioError","isDenormalized","isIEEE","isInfinite","isNaN","isNegativeZero","iterate","last","lcm","length","lex","lines","log","logBase","lookup","map","mapM","mapM_","mappend","max","maxBound","maximum","maybe","mconcat","mempty","min","minBound","minimum","mod","negate","not","notElem","null","odd","or","otherwise","pi","pred","print","product","properFraction","pure","putChar","putStr","putStrLn","quot","quotRem","read","readFile","readIO","readList","readLn","readParen","reads","readsPrec","realToFrac","recip","rem","repeat","replicate","return","reverse","round","scaleFloat","scanl","scanl1","scanr","scanr1","seq","sequence","sequenceA","sequence_","show","showChar","showList","showParen","showString","shows","showsPrec","significand","signum","sin","sinh","snd","span","splitAt","sqrt","subtract","succ","sum","tail","take","takeWhile","tan","tanh","toEnum","toInteger","toRational","traverse","truncate","uncurry","undefined","unlines","until","unwords","unzip","unzip3","userError","words","writeFile","zip","zip3","zipWith","zipWith3"]
constr = ["EQ","GT","LT","Left","Right","True","False"]
types = ["Either","FilePath","IO","IOError","Integer","Ordering","Rational","ReadS","ShowS","String","Bool","Char","Double","Float","Int","Just","Maybe","Nothing","Word"]
operators = ["!!","$!","$","&&","*","**","*>","+","++","-",".","/","/=","<$","<$>","<","<*","<*>","<=","=<<","==",">",">=",">>",">>=","^","^^","||"]
module.exports = { classes,funct,constr,types,operators }
